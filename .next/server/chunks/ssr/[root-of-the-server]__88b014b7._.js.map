{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///D:/kumpulan%20codingan/JDA/project_akhir_jda_fase2/app/register/page.tsx"],"sourcesContent":["// \"use client\";\r\n// import { useState } from \"react\";\r\n// import { useRouter } from \"next/navigation\";\r\n// import bcrypt from \"bcrypt\";\r\n\r\n// export default function Register() {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [name, setName] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const router = useRouter();\r\n\r\n//   const handleSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     const res = await fetch(\"/api/register\", {\r\n//       method: \"POST\",\r\n//       body: JSON.stringify({ email, name, password }),\r\n//     });\r\n//     if (res.ok) {\r\n//       router.push(\"/login\");\r\n//       console.log(\"berhasil mendaftar\");\r\n//       alert(\"Registration Succes\");\r\n//     } else {\r\n//       const data = await res.json();\r\n//       alert(data.error || \"Registration failed\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <input\r\n//         value={name}\r\n//         onChange={(e) => setName(e.target.value)}\r\n//         placeholder=\"Name\"\r\n//         required\r\n//       />\r\n//       <input\r\n//         value={email}\r\n//         onChange={(e) => setEmail(e.target.value)}\r\n//         placeholder=\"Email\"\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"password\"\r\n//         value={password}\r\n//         onChange={(e) => setPassword(e.target.value)}\r\n//         placeholder=\"Password\"\r\n//         required\r\n//       />\r\n//       <button type=\"submit\">Register</button>\r\n//     </form>\r\n//   );\r\n// }\r\n"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,oCAAoC;AACpC,+CAA+C;AAC/C,+BAA+B;AAE/B,uCAAuC;AACvC,4CAA4C;AAC5C,0CAA0C;AAC1C,kDAAkD;AAClD,gCAAgC;AAEhC,yDAAyD;AACzD,0BAA0B;AAC1B,iDAAiD;AACjD,wBAAwB;AACxB,yDAAyD;AACzD,UAAU;AACV,oBAAoB;AACpB,+BAA+B;AAC/B,2CAA2C;AAC3C,sCAAsC;AACtC,eAAe;AACf,uCAAuC;AACvC,oDAAoD;AACpD,QAAQ;AACR,OAAO;AAEP,aAAa;AACb,qCAAqC;AACrC,eAAe;AACf,uBAAuB;AACvB,oDAAoD;AACpD,6BAA6B;AAC7B,mBAAmB;AACnB,WAAW;AACX,eAAe;AACf,wBAAwB;AACxB,qDAAqD;AACrD,8BAA8B;AAC9B,mBAAmB;AACnB,WAAW;AACX,eAAe;AACf,0BAA0B;AAC1B,2BAA2B;AAC3B,wDAAwD;AACxD,iCAAiC;AACjC,mBAAmB;AACnB,WAAW;AACX,gDAAgD;AAChD,cAAc;AACd,OAAO;AACP,IAAI","debugId":null}}]
}